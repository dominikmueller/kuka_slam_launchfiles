<!--
   Live-Scan with cartographer_ros.
   roslaunch cartographer_ros scan.launch
-->

<launch>

  <!-- Set relevant parameters. -->
	<param name="youBotHasBase" type="bool" value="true"/>
	<param name="youBotHasArms" type="bool" value="true"/> 
	<param name="youBotDriverCycleFrequencyInHz" type="double" value="50.0"/>
	<param name="youBotConfigurationFilePath" type="string" value="$(find youbot_driver)/config"/>

	<param name="trajectoryActionServerEnable" type="bool" value="true"/>
	<param name="trajectoryPositionGain" type="double" value="5.0"/>
	<param name="trajectoryVelocityGain" type="double" value="0.0"/>

	<!-- 
	  Initialize youBot arms by name. Each named arm must have a matching config
	  file. For example, the entry:	 
		  <param name="youBotArmName1" type="str" value="MyArm"/>
	  will attempt to initialize an arm using the config file "MyArm.cfg" in your
	  default configuration path.

	  To initialize multiple arms, simply define parameters naming each of them,
	  beginning with the parameter "youBotArmName1", then "youBotArmName2", etc.
	-->
	
	<!-- Default name values --> 
	<param name="youBotBaseName" type="str" value="youbot-base"/>
	<param name="youBotArmName1" type="str" value="youbot-manipulator"/>
	

	<!-- Start the driver. NOTE: Every joint topic is mapped to armName/joint_states -->
	<node name="youbot_driver" pkg="youbot_driver_ros_interface" type="youbot_driver_ros_interface" output="screen">
		<remap from="base/joint_states" to="/joint_states"/> 
		<remap from="arm_1/joint_states" to="/joint_states"/> 
	</node>

	<!-- upoad URDF model to the parameter server -->
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find youbot_description)/robots/youbot.urdf.xacro'"/>

	<!-- start robot_state_publisher -->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>

  <node name="hokuyo_node" pkg="hokuyo_node"
    type="hokuyo_node" />
  <node name="cartographer_node" pkg="cartographer_ros"
      type="cartographer_node" args="
          -configuration_directory $(find cartographer_ros)/configuration_files
          -configuration_basename mit_odometrie.lua"
      output="screen">
  </node>

</launch>
